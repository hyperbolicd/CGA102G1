/*
Create Schema and Tables
*/


CREATE SCHEMA IF NOT EXISTS `movietheater` ;

use `movietheater`;

/*
建置會員等級資料表格
*/
CREATE TABLE IF NOT EXISTS `movietheater`.`level_data` (
  `MEMBER_LEVEL` CHAR(10) NOT NULL COMMENT '會員等級',
  `MAX_COUNT` INT NOT NULL COMMENT '最大累積票數',
  `MIN_COUNT` INT NOT NULL COMMENT '最小累積票數',
  `LEVEL_DESCRIPTION` VARCHAR(200) NOT NULL COMMENT '等級描述',
  PRIMARY KEY (`MEMBER_LEVEL`))
COMMENT = '會員等級資料';

/*
建置員工帳號表格
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`emp_account` (
  `EMP_NO` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '員工編號',
  `EMP_EMAIL` VARCHAR(50) NOT NULL COMMENT '電子信箱',
  `EMP_PASSWORD` VARCHAR(20) NOT NULL COMMENT '密碼',
  `EMP_NAME` VARCHAR(20) NOT NULL COMMENT '員工名稱',
  `EMP_PHONE` VARCHAR(20) NOT NULL COMMENT '電話',
  `EMP_ADDRESS` VARCHAR(50) NOT NULL COMMENT '地址',
  `EMP_PHOTO` LONGBLOB NULL COMMENT '員工照片',
  `EMP_STATUS` TINYINT NULL DEFAULT 1 COMMENT '員工狀態\n0:離職\n1:在職\n2:留職停薪',
  PRIMARY KEY (`EMP_NO`))
COMMENT = '員工帳號';

/*
建置員工帳號權限功能
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`emp_function` (
  `FC_NO` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '功能編號',
  `FC_NAME` VARCHAR(20) NULL COMMENT '功能名稱',
  `FC_DESCRIPTION` VARCHAR(50) NULL COMMENT '功能描述',
  `FC_CATEGORY` TINYINT NULL COMMENT '類別\n0:現場人員\n1:網站管理員\n...',
  PRIMARY KEY (`FC_NO`))
COMMENT = '員工帳號權限功能';

/*
建置常見問題
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`faq` (
  `FAQ_NO` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'FAQ編號',
  `FAQ_CLASS` TINYINT NOT NULL COMMENT 'FAQ類別 0:會員相關問題/1:影城相關問題/2:電影上映相關問題/3:其他問題',
  `FAQ_TITLE` VARCHAR(40) NOT NULL COMMENT 'FAQ標題',
  `FAQ_CONTENT` VARCHAR(1200) NOT NULL COMMENT 'FAQ內容',
  PRIMARY KEY (`FAQ_NO`))
COMMENT = '常見問答';

/*
建置公告
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`announcement` (
  `ANN_NO` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '公告編號',
  `ANN_DATE` DATETIME NOT NULL COMMENT '公告日期',
  `ANN_TITLE` VARCHAR(50) NOT NULL COMMENT '公告標題',
  `ANN_CONTENT` VARCHAR(10000) DEFAULT NULL COMMENT '公告內容',
  `ANN_PICTURE` VARCHAR(100) NULL DEFAULT NULL COMMENT '公告圖片',
  PRIMARY KEY (`ANN_NO`))
COMMENT = '公告';

/*
建置周邊商品資訊
*/

CREATE TABLE IF NOT EXISTS`movietheater`.`merchandise_inf` (
  `MERCH_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `MERCH_NAME` VARCHAR(50) NOT NULL COMMENT '商品名稱(標題)',
  `MERCH_DT` VARCHAR(2000) NOT NULL COMMENT '商品資訊',
  `MERCH_PIC1` MEDIUMBLOB COMMENT '商品圖片1',
  `MERCH_PIC2` MEDIUMBLOB COMMENT '商品圖片2',
  `MERCH_PIC3` MEDIUMBLOB COMMENT '商品圖片3',
  `MERCH_PIC4` MEDIUMBLOB COMMENT '商品圖片4',
  `MERCH_PIC5` MEDIUMBLOB COMMENT '商品圖片5',
  `MERCH_DATE` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '上架日期',
  `MERCH_PRICE` INT UNSIGNED NOT NULL COMMENT '商品價格',
  `MERCH_CLASS` VARCHAR(20) NOT NULL COMMENT '商品類別\n衣服 杯子 抱枕 公仔',
  `SOLD_TOTAL` INT NOT NULL DEFAULT 0 COMMENT '總銷售量',
  `MERCH_STATUS` TINYINT NOT NULL DEFAULT 1 COMMENT '商品狀態\n0:已上架\n1:已下架',
  `MERCH_STOCK` INT NOT NULL COMMENT '商品庫存',
  PRIMARY KEY (`MERCH_ID`))
COMMENT = '周邊商品資訊';

/*
建置票價資訊
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`tk_inf` (
  `TK_TYPE_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '票種編號',
  `TK_TYPE` VARCHAR(10) NOT NULL COMMENT '票種',
  `TK_PRICE` INT UNSIGNED NOT NULL COMMENT '定價',
  `TK_DI` TINYINT NOT NULL COMMENT '播放種類\n0:數位\n1:IMAX',
  `TK_TYPE_DT` VARCHAR(50) NULL COMMENT '關於票種的說明',
  PRIMARY KEY (`TK_TYPE_ID`))
  COMMENT = '票價資訊';
  
  /*
  建置餐飲資訊
  */
  
  
  CREATE TABLE IF NOT EXISTS `movietheater`.`fd_inf` (
  `FD_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '餐飲編號',
  `FD_TYPE` TINYINT NOT NULL COMMENT '餐飲類別\n0:飲料\n1:熟食',
  `FD_NAME` VARCHAR(50) NOT NULL COMMENT '餐飲名稱\nex.可樂大/可樂中/可樂小',
  `FD_PRICE` INT UNSIGNED NOT NULL COMMENT '餐飲定價',
  `FD_DT` VARCHAR(200) NULL COMMENT '餐飲詳細資訊\nex:幾大卡(熱量)',
  `FD_PICTURE` LONGBLOB default null COMMENT '餐飲圖片檔名',
  `FD_STATE` TINYINT NOT NULL DEFAULT 0 COMMENT '餐飲銷售狀態\n0:下架\n1:上架',
  PRIMARY KEY (`FD_ID`))
COMMENT = '餐飲資訊';

/*
建置票夾用驗證碼
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`code` (
  `CODE` INT NOT NULL COMMENT '驗證碼',
  PRIMARY KEY (`CODE`))
COMMENT = '票夾用驗證碼';

/*
建置影廳
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`hall` (
  `HL_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '影廳編號',
  `HL_NAME` VARCHAR(10) NOT NULL COMMENT '影廳名稱',
  `HL_SEAT` VARCHAR(1500) NOT NULL COMMENT '影廳座位\n01020 五位數代表一個位置，01代表第一排，02代表第二個座位最後一位數代表狀態\n0走道1可出售2已出售3保留位4維修中',
  `HL_ROW` INT NOT NULL COMMENT '影廳排數',
  `HL_COL` INT NOT NULL COMMENT '影廳列數',
  `HL_TYPE` TINYINT NOT NULL COMMENT '0:數位\n1:IMAX',
  `HL_SEATCOUNT` INT NOT NULL COMMENT '影廳座位數\n不含走道的座位數,只有編輯影廳會更動',
  PRIMARY KEY (`HL_ID`))
COMMENT = '影廳';


/*
建置影城資訊
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`cnm_inf` (
  `CNM_INF_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '影城資訊編號',
  `CNM_DT` VARCHAR(1000) NULL COMMENT '影城敘述(簡介)',
  `CNM_TEL` VARCHAR(15) NULL COMMENT '影城電話',
  `CNM_EM` VARCHAR(30) NULL COMMENT '影城信箱',
  `CNM_LC` VARCHAR(50) NULL COMMENT '影城地址',
  `CNM_TRP` VARCHAR(200) NULL COMMENT '交通資訊',
  PRIMARY KEY (`CNM_INF_ID`))
COMMENT = '影城資訊';


/*
建置電影
*/

CREATE TABLE IF NOT EXISTS`movietheater`.`movie` (
  `MV_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '電影編號',
  `MV_NAME` VARCHAR(50) NOT NULL COMMENT '電影名稱',
  `MV_E_NAME` VARCHAR(50) NOT NULL COMMENT '電影英文名稱',
  `MV_LONG` INT NOT NULL COMMENT '片長(存分鐘)',
  `MV_LEVEL` TINYINT NOT NULL COMMENT '分級(普遍/保護6+/輔導15+/限制18+)',
  `MV_PICTURE` VARCHAR(100) NULL COMMENT '圖片檔名',
  `MV_DT` VARCHAR(500) NULL COMMENT '詳細資訊',
  `MV_ST_DATE` DATETIME NOT NULL COMMENT '上映日(顯示在單一電影頁面,二輪片管理員手動修改)',
  `MV_TYPE` VARCHAR(10) NOT NULL COMMENT '類型',
  `MV_CAST` VARCHAR(300) NOT NULL COMMENT '演員',
  `MV_DRT` VARCHAR(100) NOT NULL COMMENT '導演',
  `MV_ED_DATE` DATETIME NOT NULL COMMENT '預計下檔日\n參考用(合約結束日), 不做邏輯判斷也不顯示',
  `MV_TLER` VARCHAR(3000) NULL COMMENT '預告片語法(來自youtube)',
  `MV_TT_CM` INT NULL COMMENT '總評人數',
  `MV_TT_STAR` INT NULL COMMENT '總星數',
  PRIMARY KEY (`MV_ID`))
COMMENT = '電影';


/*
建置許願池表單
*/
CREATE TABLE IF NOT EXISTS `movietheater`.`wishing_pond` (
  `WISH_NO` INT NOT NULL AUTO_INCREMENT COMMENT '許願專案號碼',
  `WISH_NAME` VARCHAR(10) NOT NULL COMMENT '許願活動名',
  `WISH_START` DATE NOT NULL COMMENT '起始時間',
  `WISH_END` DATE NOT NULL COMMENT '結束時間',
  `TOP_ONE` INT DEFAULT -1 COMMENT '冠軍',
  PRIMARY KEY (`WISH_NO`))
COMMENT = '許願池';

/*
建置許願池明細
*/
CREATE TABLE IF NOT EXISTS `movietheater`.`wishing_list` (
  `WISH_NO` INT NOT NULL COMMENT '許願專案號碼',
  `MV_ID` INT UNSIGNED NOT NULL COMMENT '電影編號',
  `WISH_COUNT` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '票數',
  PRIMARY KEY (`WISH_NO`, `MV_ID`),
  INDEX `MV_ID_idx` (`MV_ID` ASC) VISIBLE,
  CONSTRAINT `WISH_NO`
    FOREIGN KEY (`WISH_NO`)
    REFERENCES `movietheater`.`wishing_pond` (`WISH_NO`),
  CONSTRAINT `MV_ID`
    FOREIGN KEY (`MV_ID`)
    REFERENCES `movietheater`.`movie` (`MV_ID`))
COMMENT = '許願池明細';

/*
會員表格建置
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`member` (
  `MEMBER_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '會員編號',
  `MEMBER_LEVEL` CHAR(10) NOT NULL COMMENT '會員等級',
  `MEMBER_EMAIL` VARCHAR(50) NOT NULL COMMENT '會員電子信箱',
  `MEMBER_PASSWORD` VARCHAR(50) NOT NULL COMMENT '會員密碼',
  `MEMBER_NAME` VARCHAR(50) NOT NULL COMMENT '會員名稱',
  `MEMBER_PHONE` VARCHAR(10) NOT NULL COMMENT '電話',
  `MEMBER_ADDRESS` VARCHAR(225) NOT NULL COMMENT '地址',
  `MEMBER_PIC` VARCHAR(100) NULL DEFAULT NULL COMMENT '會員照片(存路徑檔名)',
  `MEMBER_STATUS` TINYINT NULL DEFAULT 0 COMMENT '0:未啟用\n1:啟用\n2:停權',
  `WISH_TICKET` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '許願票張數',
  `BONUS_POINTS` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '紅利點數',
  `SUM_COUNT` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '累計購票數(判斷會員等級)',
	PRIMARY KEY (`MEMBER_ID`),
	INDEX `MEMBER_LEVEL_idx` (`MEMBER_LEVEL` ASC) VISIBLE,
	CONSTRAINT `MEMBER_LEVEL`
    FOREIGN KEY (`MEMBER_LEVEL`)
    REFERENCES `movietheater`.`level_data` (`MEMBER_LEVEL`))
COMMENT = '會員';

/*
建立許願池回覆
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`wish_reply` (
  `WISH_REONO` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '留言編號',
  `WISH_NO` INT NOT NULL COMMENT '許願專案號碼',
  `MEMBER_ID` INT UNSIGNED NOT NULL COMMENT '會員編號',
  `WISH_MSG` VARCHAR(200) NOT NULL COMMENT '留言內容(顧客回應，若去除空白後為空字串時，則不會新增)',
  PRIMARY KEY (`WISH_REONO`),
  INDEX `WISH_NO_idx` (`WISH_NO` ASC) VISIBLE,
  INDEX `MEMBER_ID_idx` (`MEMBER_ID` ASC) VISIBLE,
  CONSTRAINT `WISH_NO_R`
    FOREIGN KEY (`WISH_NO`)
    REFERENCES `movietheater`.`wishing_pond` (`WISH_NO`),
  CONSTRAINT `MEMBER_ID`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `movietheater`.`member` (`MEMBER_ID`))
COMMENT = '許願池回覆';

/*
建置員工帳號權限
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`emp_privilege` (
  `EMP_NO` INT UNSIGNED NOT NULL COMMENT '員工編號',
  `FC_NO` INT UNSIGNED NOT NULL COMMENT '功能編號',
  PRIMARY KEY (`EMP_NO`, `FC_NO`),
  INDEX `FC_NO_FK_idx` (`FC_NO` ASC) VISIBLE,
  CONSTRAINT `EMP_NO_FK`
    FOREIGN KEY (`EMP_NO`)
    REFERENCES `movietheater`.`emp_account` (`EMP_NO`),
  CONSTRAINT `FC_NO_FK`
    FOREIGN KEY (`FC_NO`)
    REFERENCES `movietheater`.`emp_function` (`FC_NO`))
COMMENT = '員工功能權限';

/*
建置購物車明細
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`sc_detail` (
  `MEMBER_ID` INT UNSIGNED NOT NULL COMMENT '會員編號',
  `MERCH_ID` INT UNSIGNED NOT NULL COMMENT '商品編號',
  `SC_COUNT` INT UNSIGNED NOT NULL COMMENT '數量',
  PRIMARY KEY (`MEMBER_ID`, `MERCH_ID`),
  INDEX `MERCH_ID_FK_idx` (`MERCH_ID` ASC) VISIBLE,
  CONSTRAINT `MEMBER_ID_FK`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `movietheater`.`member` (`MEMBER_ID`),
  CONSTRAINT `MERCH_ID_FK`
    FOREIGN KEY (`MERCH_ID`)
    REFERENCES `movietheater`.`merchandise_inf` (`MERCH_ID`))
COMMENT = '購物車明細';


/*
建立周邊訂單
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`merchandise_order` (
  `MERCH_OR_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '訂單編號',
  `MEMBER_ID` INT UNSIGNED NOT NULL COMMENT '會員編號',
  `MERCH_OR_DATE` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '訂購日期',
  `MERCH_OR_COUNT` INT UNSIGNED NOT NULL COMMENT '商品總價',
  `MERCH_OR_STATUS` TINYINT UNSIGNED NOT NULL COMMENT '訂單狀態',
  PRIMARY KEY (`MERCH_OR_ID`),
  INDEX `MO_MEMBER_ID_FK_idx` (`MEMBER_ID` ASC) VISIBLE,
  CONSTRAINT `MO_MEMBER_ID_FK`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `movietheater`.`member` (`MEMBER_ID`))
COMMENT = '周邊商品訂單';


/*
建置訂單明細
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`order_detail` (
  `MERCH_OR_ID` INT UNSIGNED NOT NULL COMMENT '訂單編號',
  `ITEM` INT NOT NULL COMMENT '項次',
  `MERCH_ID` INT UNSIGNED NOT NULL COMMENT '商品編號',
  `OR_COUNT` INT UNSIGNED NOT NULL COMMENT '商品數量',
  `OR_STATUS` TINYINT NOT NULL COMMENT '訂單狀態(EX:已備貨/未取貨等等)',
  `OR_PRICE` INT UNSIGNED NOT NULL COMMENT '商品單價',
  PRIMARY KEY (`MERCH_OR_ID`, `ITEM`),
  INDEX `MERCH_OR_ID_FK_idx` (`MERCH_ID` ASC) VISIBLE,
  CONSTRAINT `MERCH_OR_ID_FK`
    FOREIGN KEY (`MERCH_OR_ID`)
    REFERENCES `movietheater`.`merchandise_order` (`MERCH_OR_ID`),
  CONSTRAINT `OR_MERCH_ID_FK`
    FOREIGN KEY (`MERCH_ID`)
    REFERENCES `movietheater`.`merchandise_inf` (`MERCH_ID`))
COMMENT = '訂單明細';


/*建置活動方案明細*/

CREATE TABLE IF NOT EXISTS`movietheater`.`activity_detail` (
  `ACT_ID` INT UNSIGNED NOT NULL COMMENT '活動方案編號',
  `ACT_DATE_START` DATE NULL COMMENT '活動起始時間',
  `ACT_TITLE` VARCHAR(40) NOT NULL COMMENT '活動標題',
  `ACT_SUBTITLE` VARCHAR(40) NOT NULL COMMENT '活動副標題',
  `TK_TYPE_ID` INT UNSIGNED NOT NULL COMMENT '票種編號',
  `ACT_DISCOUNT` DOUBLE NOT NULL COMMENT '活動折扣(0<x<1)',
  `ACT_COUPON` INT NOT NULL COMMENT '活動折價',
  `ACT_STATUS` TINYINT NOT NULL COMMENT '活動狀態(0:未上架 1:已上架 2:已下架)',
  `ACT_CONTENT` VARCHAR(10000) NULL COMMENT '活動敘述',
  `ACT_PICTURE` VARCHAR(100) NULL DEFAULT NULL COMMENT '活動圖片',
  PRIMARY KEY (`ACT_ID`,`TK_TYPE_ID`),
  INDEX `ACTIVITY_TK_TYPE_ID_FK_idx` (`TK_TYPE_ID` ASC) VISIBLE,
  CONSTRAINT `ACTIVITY_TK_TYPE_ID_FK`
    FOREIGN KEY (`TK_TYPE_ID`)
    REFERENCES `movietheater`.`tk_inf` (`TK_TYPE_ID`))
COMMENT = '活動方案明細';



/*
建置電影場次
*/


CREATE TABLE IF NOT EXISTS `movietheater`.`showing` (
  `SH_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '場次編號',
  `MV_ID` INT UNSIGNED NOT NULL COMMENT '電影編號',
  `HL_ID` INT UNSIGNED NOT NULL COMMENT '影廳編號',
  `SH_STATE` TINYINT NOT NULL COMMENT '場次狀態(直接讓此場次無法定位  0:未滿  1:已滿)',
  `SH_SEAT_STATE` VARCHAR(1500) NOT NULL COMMENT '場次座位狀態',
  `SH_TIME` DATETIME NOT NULL COMMENT '時段',
  `SH_TYPE` TINYINT NOT NULL COMMENT '電影播放類型(0:數位 1:IMAX)',
  PRIMARY KEY (`SH_ID`),
  INDEX `SHOWING_MV_ID_FK_idx` (`MV_ID` ASC) VISIBLE,
  INDEX `SHOWING_HL_ID_FK_idx` (`HL_ID` ASC) VISIBLE,
  CONSTRAINT `SHOWING_MV_ID_FK`
    FOREIGN KEY (`MV_ID`)
    REFERENCES `movietheater`.`movie` (`MV_ID`),
  CONSTRAINT `SHOWING_HL_ID_FK`
    FOREIGN KEY (`HL_ID`)
    REFERENCES `movietheater`.`hall` (`HL_ID`))
COMMENT = '電影場次';


/*
建置電影票訂單
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`tk_ord` (
  `TK_ORD_ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '電影票訂單編號',
  `MEMBER_ID` INT UNSIGNED NOT NULL COMMENT '會員編號',
  `SH_ID` INT UNSIGNED NOT NULL COMMENT '場次編號',
  `ORD_TIME` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '訂購日期',
  PRIMARY KEY (`TK_ORD_ID`),
  INDEX `TK_ORD_MEMBER_ID_FK_idx` (`MEMBER_ID` ASC) VISIBLE,
  INDEX `TK_ORD_SH_ID_FK_idx` (`SH_ID` ASC) VISIBLE,
  CONSTRAINT `TK_ORD_MEMBER_ID_FK`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `movietheater`.`member` (`MEMBER_ID`),
  CONSTRAINT `TK_ORD_SH_ID_FK`
    FOREIGN KEY (`SH_ID`)
    REFERENCES `movietheater`.`showing` (`SH_ID`))
COMMENT = '電影票訂單';
/*
建置電影票明細
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`tk_ord_dt` (
  `TK_DT_ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '電影票明細編號',
  `TK_ORD_ID` BIGINT UNSIGNED NOT NULL COMMENT '電影票訂單編號',
  `TK_TYPE_ID` INT UNSIGNED NOT NULL COMMENT '票種編號',
  `ACT_ID` INT UNSIGNED NOT NULL COMMENT '活動方案編號',
  `STATE` TINYINT NOT NULL COMMENT '狀態',
  `SEAT` VARCHAR(5) NOT NULL COMMENT '座位',
  `SELL_PRICE` INT NOT NULL COMMENT '售價',
  PRIMARY KEY (`TK_DT_ID`),
  CONSTRAINT `TK_ORD_DT_ID_FK`
    FOREIGN KEY (`TK_ORD_ID`)
    REFERENCES `movietheater`.`tk_ord` (`TK_ORD_ID`),
CONSTRAINT `TK_ORD_ACT_ID & TK_ORD_TYPE_FK`
	FOREIGN KEY (`ACT_ID`, `TK_TYPE_ID`)
	REFERENCES `movietheater`.`activity_detail` (`ACT_ID`, `TK_TYPE_ID`))
  -- CONSTRAINT `TK_ORD_TYPE_FK`
--     FOREIGN KEY (`TK_TYPE_ID`)
--     REFERENCES `movietheater`.`tk_inf` (`TK_TYPE_ID`),
--   CONSTRAINT `TK_ORD_ACT_ID`
--     FOREIGN KEY (`ACT_ID`)
--     REFERENCES `movietheater`.`activity_detail` (`ACT_ID`))
COMMENT = '電影票訂單明細';

/*
建置餐飲明細
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`fd_ord_dt` (
  `FD_DT_ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '餐飲明細編號',
  `TK_ORD_ID` BIGINT UNSIGNED NOT NULL COMMENT '電影票訂單編號',
  `FD_ID` INT UNSIGNED NOT NULL COMMENT '餐飲編號',
  `FD_COUNT` INT NOT NULL COMMENT '餐飲數量',
  `FD_STATE` TINYINT NOT NULL DEFAULT 0 COMMENT '餐飲狀態\nex.已付款0(預設)/已取餐1／已退餐2（不可單退）',
  `SELL_PRICE` INT NOT NULL COMMENT '售價',
  PRIMARY KEY (`FD_DT_ID`),
  CONSTRAINT `FD_ORD_TK_ORD_ID_FK`
    FOREIGN KEY (`TK_ORD_ID`)
    REFERENCES `movietheater`.`tk_ord` (`TK_ORD_ID`),
  CONSTRAINT `FD_ORD_FD_ID_FK`
    FOREIGN KEY (`FD_ID`)
    REFERENCES `movietheater`.`fd_inf` (`FD_ID`))
COMMENT = '餐飲明細';

/*
建置評論區
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`cmt` (
  `CM_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '評論編號',
  `MEMBER_ID` INT UNSIGNED NOT NULL COMMENT '會員編號',
  `MV_ID` INT UNSIGNED NOT NULL COMMENT '電影編號',
  `CM_TEXT` VARCHAR(500) NULL COMMENT '評論內容(純文字)',
  `CM_LIKE` INT NULL COMMENT '按讚數',
  `CM_STAR` TINYINT NOT NULL COMMENT '星星數(1~5星)',
  `CM_STATE` TINYINT NOT NULL COMMENT '狀態(正常0(預設)/暴雷隱藏1(點擊可看)/刪除隱藏2(員工可看))',
  `CM_DATE` DATETIME Default CURRENT_TIMESTAMP NULL COMMENT '評論日期',
  PRIMARY KEY (`CM_ID`),
  INDEX `CMT_MEMBER_ID_FK_idx` (`MEMBER_ID` ASC) VISIBLE,
  INDEX `CMT_MV_ID_FK_idx` (`MV_ID` ASC) VISIBLE,
  CONSTRAINT `CMT_MEMBER_ID_FK`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `movietheater`.`member` (`MEMBER_ID`),
  CONSTRAINT `CMT_MV_ID_FK`
    FOREIGN KEY (`MV_ID`)
    REFERENCES `movietheater`.`movie` (`MV_ID`))
COMMENT = '評論區';


/*
建置檢舉表單
*/

CREATE TABLE IF NOT EXISTS `movietheater`.`report` (
  `RP_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '檢舉單號',
  `CM_ID` INT UNSIGNED NOT NULL COMMENT '評論編號(被檢舉人)',
  `MEMBER_ID` INT UNSIGNED NOT NULL COMMENT '會員編號(檢舉人)',
  `RP_TEXT` VARCHAR(50) NULL COMMENT '檢舉內容',
  `RP_TYPE` VARCHAR(10) NULL COMMENT '檢舉類別',
  `RP_STATE` TINYINT NULL DEFAULT 0 COMMENT '狀態(已處理1/未處理0(預設))',
  `RP_DATE` DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '檢舉日期',
  PRIMARY KEY (`RP_ID`),
  INDEX `REPORT_CM_ID_FK_idx` (`CM_ID` ASC) VISIBLE,
  INDEX `REPORT_MEMBER_ID_FK_idx` (`MEMBER_ID` ASC) VISIBLE,
  CONSTRAINT `REPORT_CM_ID_FK`
    FOREIGN KEY (`CM_ID`)
    REFERENCES `movietheater`.`cmt` (`CM_ID`),
  CONSTRAINT `REPORT_MEMBER_ID_FK`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `movietheater`.`member` (`MEMBER_ID`))
COMMENT = '檢舉表單';